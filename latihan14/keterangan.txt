---- Keterangan Latihan 14 (Express Middleware) ----

1. Pengertian
   - createServer
     - Untuk membuat sebuah server pada NodeJS
   - http://localhost:3000/ (Port 3000)
     - Karena di dalam sistem operasi biasanya banyak sekali port bahkan dari 0 s/d 60k, tapi masalahnya kita tidak mengetahui port mana yang kosong
       dan port mana yang sedang digunakan jika ada tulisan Yes atau Assigned itu sudah ada yang pakai jadi kita harus menentukan port nya terlebih
       dahulu
     - Menggunakan port 3000 karena tidak ada yang menggunakan dan menjadi standar untuk digunakan sebagai port web server jika menggunkan NodeJS,
       Rubby, dll
   - ExpressJS
     - Fast, unopinionated, minimalist web framework for nodeJS
       - Unopinionated
         - Artinya aturan-aturan dalam membuat sesuatu dari framwork tersebut diberi tahu oleh frameworknya
         - Tidak ada aturan baku untuk membuat sesuatu
         - Flexibel
         - Menentukan sendiri struktur aplikasi
         - Bongkar pasang Middleware
     - Web App Framework yang Dibuat di atas NodeJS
     - Menyediakan antarmuka yang minimal untuk kakas yang diperlukan dalam membuat sebuah aplikasi web
       - Jadi dengan menuliskan beberapa baris code saja kita sudah dapat membuat aplikasi yang sederhana
     - Membantu pengelolaan aliran data dari server ke aplikasi
     - MERN, MEARN, MEVN Stack (MongoDB, ExpressJS, React | Angular | Vue, NodeJS)
     - Diciptakan oleh TJ Holowaychuck, pada tanggal 22 mei 2010
   - Fitur ExpressJS 
     - Menangani request dengan berbagai metode HTTP dengan mudah (Routes)
       - Jadi jika ada request dalam metode get, post itu ditangani dengan mudah sehingga kedepannya jika ingin membuat aplikasi REST APi maka ExpressJS
         juga dapat menangani ini dengan baik
     - MVC (Model View Controller)
     - Terintegrasi dengan "view" rendering engine, untuk mengelola template
     - Middleware
       - Mengunakan method use
   - View Engine (Template Engine)
     - Memungkinkan kita membuat file template statis untuk aplikasi kita
     - Engie tersebut mengganti variable pada template kita dengan nilai sebenarnya, lalu menampilkannya dalam bentuk HTML
     - Mempermudah pembuatan halaman HTML
     - EJS (Embedded JavaScript Template)
       - Simple Syntax
       - Simple Setup
       - Speedy Execution
       - Easy Debugging
       - Active Development
       - Awalnya dibuah oleh pembuat Express
   - Middle Ware
     - Sebuah software yang menghubungkan software atau aplikasi lain
       - Awalnya Middleware ini adalah sebuah istilah untuk menghubungkan sebuah aplikasi di komputer kita dengan sistem operasi
   - Express Middle
     - Aplikasi Express itu sebenarnya berisi serangkaian pemanggilan fungsi Middleware
     - User-defined Middleware
       - Application-level Middle
       - Router-level Middleware
       - Error-handling Middleware
     - Built-in Middleware
       - Sudah tertanam di dalam express yang berfungsi untuk melakukan sesuatu sescara spesifik
     - Third-party Middleware
       - Sudah dibuatkan oleh orang lain yang dapat kita install melalui npm tapi bukan sebagai modul tapi sebagai Middleware
   - Fungsi Middleware
     - Sebuah fungsi yang memiliki akses ke object request (req), object response (res), dan fungsi Middleware berikutnya (next)
   - Express Static
     - Supaya kita dapat mengakses asset-aset pada website, maka kita harus memberi tahu kepada experss nya kalau kita memiliki folder
       public yang isinya file-file static yang boleh diakses oleh siapapun dengan Middleware build-in yaitu expres.static
   - res (Response)
     - Artinya apa yang dikembalikan oleh express ketika kita mentarget path atau alamat tertentu
   - req (Request)
     - Artinya apa yang dikirimkan ke express nya
   - send
     - Artinya mengirim isi dari sebuah file
   - sendFile
     - Artinya mengembalikan isi dari sebuah file
   - Routing
     - Adalah sebuah program yang berjalan setelah kita melakukan request dan sebelum halamannya tampil ke layar
   - use
     - Artinya fungsi ini akan selalu dijalankan ketika menerima route ('/')

2. Cara Penggunaan
   - Ketik npm init -y
     - Untuk membuat file package.json
   - Ketik npm install express@4.17.1 --save
     - Untuk menginstall ExpressJS ke dalam dependensi sesuai dengan versinya
   - Ketik npm install -g nodemon
     - Untuk menginstall nodemon secara global
   - Ketik npm install ejs@3.1.6
     - Untuk menginstall ejs ke dalam dependensi sesuai dengan versinya
   - Ketik npm install express-ejs-layouts@2.5.0
     - Untuk menginstall express ejs layouts ke dalam dependensi sesuai dengan versinya
   - Ketik npm install morgan@1.10.0
     - Untuk menginstall morgan ke dalam dependensi sesuatu dengan versinya